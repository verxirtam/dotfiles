"---------------------------
" Start Neobundle Settings.
"---------------------------
" bundleで管理するディレクトリを指定
set runtimepath+=~/.vim/bundle/neobundle.vim/
 
" Required:
call neobundle#begin(expand('~/.vim/bundle/'))
 
" neobundle自体をneobundleで管理
NeoBundleFetch 'Shougo/neobundle.vim'
 
" 今後このあたりに追加のプラグインをどんどん書いて行きます！！"
" jellybeans カラースキーム
NeoBundle 'nanotech/jellybeans.vim'

" hybrid カラースキーム
NeoBundle 'w0ng/vim-hybrid'

" カラースキーム一覧表示に Unite.vim を使う
NeoBundle 'Shougo/unite.vim'
NeoBundle 'ujihisa/unite-colorscheme'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" if_luaが有効ならneocompleteを使う
NeoBundle has('lua') ? 'Shougo/neocomplete' : 'Shougo/neocomplcache'
if neobundle#is_installed('neocomplete')
	" neocomplete用設定
	let g:neocomplete#enable_at_startup = 1
	let g:neocomplete#enable_ignore_case = 1
	let g:neocomplete#enable_smart_case = 1
	if !exists('g:neocomplete#keyword_patterns')
		let g:neocomplete#keyword_patterns = {}
	endif
	let g:neocomplete#keyword_patterns._ = '\h\w*'
	let g:neocomplete#enable_auto_select = 1
	inoremap <expr><CR>   pumvisible() ? neocomplete#close_popup()  : "<CR>"
elseif neobundle#is_installed('neocomplcache')
	" neocomplcache用設定
	let g:neocomplcache_enable_at_startup = 1
	let g:neocomplcache_enable_ignore_case = 1
	let g:neocomplcache_enable_smart_case = 1
	if !exists('g:neocomplcache_keyword_patterns')
		let g:neocomplcache_keyword_patterns = {}
	endif
	let g:neocomplcache_keyword_patterns._ = '\h\w*'
	let g:neocomplcache_enable_camel_case_completion = 1
	let g:neocomplcache_enable_underbar_completion = 1
	" 1番目の候補を自動選択
	let g:neocomplcache_enable_auto_select = 1 
	" 補完候補が表示されている場合は確定。そうでない場合は改行
	inoremap <expr><CR>  pumvisible() ? neocomplcache#close_popup() : "<CR>"
endif
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" スニペットを入力するプラグイン
NeoBundle 'Shougo/neosnippet'

" c, c++向けのプラグイン
NeoBundle 'c.vim'

" Clangを利用した入力補完
NeoBundle 'Shougo/vimproc.vim', {
	\ 'build' : {
	\     'windows' : 'tools\\update-dll-mingw',
	\     'cygwin' : 'make -f make_cygwin.mak',
	\     'mac' : 'make',
	\     'linux' : 'make',
	\     'unix' : 'gmake',
	\    },
	\ }
NeoBundle "osyo-manga/vim-reunions"
NeoBundle "osyo-manga/vim-marching"

" clang コマンドの設定
 let g:marching_clang_command = "/usr/bin/clang++-3.5"

 " オプションを追加する場合
 let g:marching_clang_command_option="-std=c++1y"

" インクルードディレクトリのパスを設定
let g:marching_include_paths = [
	\   "/usr/include",
	\   "/usr/local/include",
	\   "/usr/local/cuda/include"
	\]

" neocomplete.vim と併用して使用する場合
let g:marching_enable_neocomplete = 1

if !exists('g:neocomplete#force_omni_input_patterns')
	let g:neocomplete#force_omni_input_patterns = {}
endif

let g:neocomplete#force_omni_input_patterns.cpp =
	\ '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'

" 処理のタイミングを制御する
" 環境に合わせて間隔を短くする
set updatetime=200

" オムニ補完時に補完ワードを挿入したくない場合
imap <buffer> <C-x><C-o> <Plug>(marching_start_omni_complete)

""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""


call neobundle#end()
 
" Required:
filetype plugin indent on
 
" 未インストールのプラグインがある場合、インストールするかどうかを尋ねてくれるようにする設定
" 毎回聞かれると邪魔な場合もあるので、この設定は任意です。
NeoBundleCheck
 
"-------------------------
" End Neobundle Settings.
"-------------------------

set background=dark
colorscheme desert


set list  " 不可視文字を表示する
set listchars=tab:>-,trail:_ "タブを >--- で表示する

highlight ZenkakuSpace ctermbg=white
match ZenkakuSpace /　/
